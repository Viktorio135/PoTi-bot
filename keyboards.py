from aiogram.types import (
    InlineKeyboardMarkup, 
    ReplyKeyboardMarkup, 
    InlineKeyboardButton, 
    KeyboardButton
)
from dataBase.db_commands import read_university

def select_sex():
    btn1 = InlineKeyboardButton(text='–ú–∞–ª—å—á–∏–∫', callback_data='register_sex:boy')
    btn2 = InlineKeyboardButton(text='–î–µ–≤–æ—á–∫–∞', callback_data='register_sex:girl')
    keyboard = InlineKeyboardMarkup().add(btn1, btn2)
    return keyboard

def select_search():
    btn1 = InlineKeyboardButton(text='–ú–∞–ª—å—á–∏–∫–∞', callback_data='register_search:boy')
    btn2 = InlineKeyboardButton(text='–î–µ–≤–æ—á–∫—É', callback_data='register_search:girl')
    keyboard = InlineKeyboardMarkup().add(btn1, btn2)
    return keyboard

def select_education(is_filter=False):
    if not is_filter:
        btn1 = InlineKeyboardButton(text='–°–ü–û', callback_data='register_education:spo')
        btn2 = InlineKeyboardButton(text='–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç', callback_data='register_education:bakalavriat')
        btn3 = InlineKeyboardButton(text='–°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç', callback_data='register_education:specialitet')
        btn4 = InlineKeyboardButton(text='–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞', callback_data='register_education:magistratura')
        keyboard = InlineKeyboardMarkup().add(btn1, btn2).add(btn3, btn4)

    elif is_filter:
        btn1 = InlineKeyboardButton(text='–°–ü–û', callback_data='filter_education:spo')
        btn2 = InlineKeyboardButton(text='–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç', callback_data='filter_education:bakalavriat')
        btn3 = InlineKeyboardButton(text='–°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç', callback_data='filter_education:specialitet')
        btn4 = InlineKeyboardButton(text='–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞', callback_data='filter_education:magistratura')
        btn5 = InlineKeyboardButton(text='–õ—é–±–∞—è', callback_data='filter_education:all')
        keyboard = InlineKeyboardMarkup().add(btn1, btn2).add(btn3, btn4).add(btn5)
    return keyboard

async def select_university(is_filter=False):
    universities = await read_university()

    keyboard = InlineKeyboardMarkup()

    if not is_filter:
        for university in universities:
            if university != 'all':
                btn = InlineKeyboardButton(text=university, callback_data=f'register_university:{university}')
                keyboard.add(btn)
        return keyboard
    elif is_filter:
        for university in universities:
            if university != 'all':
                btn = InlineKeyboardButton(text=university, callback_data=f'filter_university:{university}')
                keyboard.add(btn)
        btn_all = InlineKeyboardButton(text='–í—Å–µ', callback_data='filter_university:all')
        keyboard.add(btn_all)
        return keyboard

def end_registration_kb(file_id):
    
    btn1 = InlineKeyboardButton(text='–í—Å—ë –≤–µ—Ä–Ω–æ!', callback_data=f'end_registration:{file_id}')
    btn2 = InlineKeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ:(', callback_data='repeat_registration')
    keyboard = InlineKeyboardMarkup().add(btn1).add(btn2)
    return keyboard

def menu_kb():
    btn1 = KeyboardButton(text='–ú–æ—è –∞–Ω–∫–µ—Ç–∞')
    btn2 = KeyboardButton(text='C–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã')
    btn3 = KeyboardButton(text='–§–∏–ª—å—Ç—Ä')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row(btn2).row(btn1, btn3)
    return keyboard

def reg_menu():
    btn1 = KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).row(btn1)
    return keyboard

def my_profile_kb():
    btn1 = InlineKeyboardButton(text='–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ', callback_data='repeat_profile')
    btn2 = InlineKeyboardButton(text='–Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å ', callback_data='disable_active')
    keyboard = InlineKeyboardMarkup().add(btn1).add(btn2)
    return keyboard

def search_kb():
    btn1 = KeyboardButton('‚ù§Ô∏è')
    btn2 = KeyboardButton('üëé')
    btn3 = KeyboardButton('üí§')
    btn4 = KeyboardButton('‚ö†Ô∏è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row(btn1, btn4, btn2, btn3)
    return keyboard

def show_like_kb():
    btn1 = KeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row(btn1)
    return keyboard

def like_kb():
    btn1 = KeyboardButton('üíú')
    btn2 = KeyboardButton('üëéüèª')
    btn4 = KeyboardButton('‚ùóÔ∏è')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).row(btn1, btn4, btn2)
    return keyboard


def filters_main_kb():
    btn1 = KeyboardButton('–í–æ–∑—Ä–∞—Å—Ç')
    btn2 = KeyboardButton('–£—á. –∑–∞–≤–µ–¥–µ–Ω–∏–µ')
    btn3 = KeyboardButton('–ö—É—Ä—Å')
    btn4 = KeyboardButton('–§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è')
    btn5 = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).row(btn1, btn2).row(btn3, btn4).row(btn5)
    return keyboard

def filter_cource_age_kb(is_filter_age=False):
    if not is_filter_age:
        btn1 = InlineKeyboardButton(text='–õ—é–±–æ–π –∫—É—Ä—Å', callback_data='filter_cource_all')
        btn2 = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='filter_cource_cancle')
    elif is_filter_age:
        btn1 = InlineKeyboardButton(text='–õ—é–±–æ–π –≤–æ–∑—Ä–∞—Å—Ç', callback_data='filter_age_all')
        btn2 = InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='filter_age_cancle')
    keyboard = InlineKeyboardMarkup().add(btn1).add(btn2)
    return keyboard
